@model FamilyTree.ViewModels.TreeVM

@{
    Layout = "_Layout";
}

@section Sidebar
{
  @await Component.InvokeAsync("Sidebar")
}
 
@section Slidebr
{
  @await Component.InvokeAsync("Slidebar")
}

<!DOCTYPE html>

<html lang="en">
<head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <title>Tree</title>
      <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    </head>
<body>
<div>
    <div class="container-fluid">
        <div class="row">
            @using (Html.BeginForm("Update", "Tree", new { treeId = Model.Id }, FormMethod.Post))
            {
                <div class="col-3">
                    @Html.LabelFor(t => t.Name, "Name of tree")
                </div>
                <div class="col-6">
                    @Html.TextAreaFor(t => t.Name, 1, 10, new { @class = "form-control" })
                </div>
                <div class="col-3">
                    <button type="submit" class="btn" style="background-color: rgba(95, 50, 0, 1); color: rgba(255, 255, 255, 1);">Save</button>
                </div>
            }
        </div>
        <div class="row">
            <div class="col-12">
                @using (Html.BeginForm("Delete", "Tree", new { treeId = Model.Id }, FormMethod.Post))
                {
                    <button type="submit" class="btn" style="background-color: rgba(140, 40, 0, 1); color: rgba(255, 255, 255, 1);">Delete</button>
                }
            </div>
        </div>
    </div>
</div>
</body>
</html>